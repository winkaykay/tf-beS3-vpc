name: 'Terraform'

on:
  push:
    branches:
    -  main
    paths:
    -  terraform/**
  pull_request:
    branches:
    -  main
    paths:
    -  terraform/**

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and installs the wrapper script to wrap subsequent calls to the terraform binary:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

     # To run S3 with static IAM credentials in repository secrets 
    - name: Configure AWS Credentials for Backend
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
    
    # To run plan and vpc with static IAM credentials in repository secrets 
    - name: Configure AWS Credentials for Resource
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_RESOURCE_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_RESOURCE_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    # Generates an execution plan for Terraform
    - name: Terraform Plan 
      run: terraform plan -input=false
      
      # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
